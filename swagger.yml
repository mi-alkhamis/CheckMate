openapi: 3.0.3
#----------------------------------------- Components -----------------------------------------
info:
  title: "Flask API"
  description: "An api about user and thier notes"
  contact: 
    name: "Milad Alkahamis"
    email: "mi-alkhamis@hotmail.com"
  license:
    name: GPLv3
    url: "https://www.gnu.org/licenses/gpl-3.0.en.html"
  version: "0.1"
servers:
  - url: "/api"

#----------------------------------------- Components -----------------------------------------
components:
  schemas:
    user:
      type: "object"
      required:
        - username
        - email
      properties:
        username:
          type: "string"
        email:
          type: "string"
        first_name:
          type: "string"
        last_name:
          type: "string"
  parameters:
   username:
      name: "username"
      description: "username info to get"
      in: path
      required: True
      schema:
        type: "string"

#----------------------------------------- Paths -----------------------------------------
paths:
  /user:
    get:
      operationId: "user.read_all"
      tags: 
        - user
      summary: "Read the list of user"
      responses:
        "200":
          description: "Successfully read user list"
    post:
      operationId: "user.create"
      tags:
        - user
      summary: "Create a user"
      requestBody:
          description: "User to create"
          required: True
          content:
            application/json:
              schema:
                x-body-name: "user"     # parametre of handler function to send body to 
                $ref: "#/components/schemas/user"
      responses:
        "201":
          description: "Successfully created person"
        "406":
          description: " Person Already Existed in DB."
          
  /user/{username}:
    get:
      operationId: user.read_one
      tags:
        - user
      summary: "read info of a person"
      parameters:
        - $ref: "#/components/parameters/username"
      responses:
        "200":
          description: "Successfully read a user info"
        "404":
          description: "The username not exited"
    put:
      operationId: user.update_one
      tags: 
        - user
      summary: "Update a Person info"
      parameters:
        - $ref: "#/components/parameters/username"
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: "user"
              $ref: "#/components/schemas/user"
      responses:
        "2001":
          description: "The user info updated successfully."
        "404":
          description: "The Username does not exist."
    delete:
      operationId: user.delete_one
      summary: "Delete a person from DB"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/username"
      responses:
        "200":
          description: "Successfully deleted user."
        "404":
          description: "The User not existed"
        
      
